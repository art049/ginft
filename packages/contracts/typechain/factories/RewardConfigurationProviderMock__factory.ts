/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardConfigurationProviderMock,
  RewardConfigurationProviderMockInterface,
} from "../RewardConfigurationProviderMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialTokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
    ],
    name: "getMaxReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialTokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
    ],
    name: "getUnlockedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636b7d6d621461003b5780639e20043414610060575b600080fd5b61004e610049366004610256565b610073565b60405190815260200160405180910390f35b61004e61006e366004610281565b610088565b60006100808484846100a1565b949350505050565b600061009786868686866100c5565b9695505050505050565b60006100808484846100b56012600a61033d565b6100c090601e6103eb565b61020a565b6000806100d2878761040a565b905060006100e462015180601e6103eb565b6100ef9060066103eb565b6100f990836102d3565b9050600061010882600261032a565b6101146012600a61033d565b61011f90601e6103eb565b61012991906102d3565b6101356012600a61033d565b61014090601e6103eb565b61014a919061040a565b9050600061015c62015180601e6103eb565b6101679060066103eb565b6101719085610421565b905060006101808460016102bb565b61018b90600261032a565b6101976012600a61033d565b6101a290601e6103eb565b6101ac91906102d3565b905060006101be62015180601e6103eb565b6101c99060066103eb565b6101d383856103eb565b6101dd91906102d3565b905060006101eb82866102bb565b90506101f98b8b8b8461020a565b9d9c50505050505050505050505050565b6000826102196012600a61033d565b6102249060646103eb565b61022e91906103eb565b8461023984886103eb565b61024391906103eb565b61024d91906102d3565b95945050505050565b60008060006060848603121561026a578283fd5b505081359360208301359350604090920135919050565b600080600080600060a08688031215610298578081fd5b505083359560208501359550604085013594606081013594506080013592509050565b600082198211156102ce576102ce610435565b500190565b6000826102e2576102e2610464565b500490565b600181815b8085111561032257816000190482111561030857610308610435565b8085161561031557918102915b93841c93908002906102ec565b509250929050565b60006103368383610348565b9392505050565b600061033660ff8416835b600082610357575060016103e5565b81610364575060006103e5565b816001811461037a5760028114610384576103a0565b60019150506103e5565b60ff84111561039557610395610435565b50506001821b6103e5565b5060208310610133831016604e8410600b84101617156103c3575081810a6103e5565b6103cd83836102e7565b80600019048211156103e1576103e1610435565b0290505b92915050565b600081600019048311821515161561040557610405610435565b500290565b60008282101561041c5761041c610435565b500390565b60008261043057610430610464565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212206e12e197fcf670f8f0d2cbc51423015aeae910ee38d87217309a59cc9fdcb0f564736f6c63430008040033";

export class RewardConfigurationProviderMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardConfigurationProviderMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<RewardConfigurationProviderMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RewardConfigurationProviderMock {
    return super.attach(address) as RewardConfigurationProviderMock;
  }
  connect(signer: Signer): RewardConfigurationProviderMock__factory {
    return super.connect(signer) as RewardConfigurationProviderMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardConfigurationProviderMockInterface {
    return new utils.Interface(
      _abi
    ) as RewardConfigurationProviderMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardConfigurationProviderMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RewardConfigurationProviderMock;
  }
}
