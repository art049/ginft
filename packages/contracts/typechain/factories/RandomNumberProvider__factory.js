"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RandomNumberProvider__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_vrfCoordinator",
                type: "address",
            },
            {
                internalType: "address",
                name: "_linkToken",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "keyHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
        ],
        name: "getRandomRequestResult",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "randomness",
                type: "uint256",
            },
        ],
        name: "rawFulfillRandomness",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "requestRandomNumber",
        outputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "withdrawLink",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60c060405234801561001057600080fd5b50604051610aa5380380610aa583398101604081905261002f916100d7565b6001600160601b0319606085811b821660a05284901b166080526100586100533390565b610069565b600291909155600355506101199050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100d257600080fd5b919050565b600080600080608085870312156100ec578384fd5b6100f5856100bb565b9350610103602086016100bb565b6040860151606090960151949790965092505050565b60805160601c60a05160601c61094c61015960003960008181610424015261065b0152600081816102790152818161033e015261062c015261094c6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638678a7b21161005b5780638678a7b2146100c55780638da5cb5b146100cd57806394985ddd146100e8578063f2fde38b146100fb57600080fd5b80630bedf9c114610082578063715018a6146100a85780637a8042bd146100b2575b600080fd5b6100956100903660046107ff565b61010e565b6040519081526020015b60405180910390f35b6100b0610184565b005b6100b06100c03660046107ff565b6101ea565b610095610301565b6001546040516001600160a01b03909116815260200161009f565b6100b06100f6366004610817565b610419565b6100b06101093660046107b1565b6104dc565b60008181526005602052604081205460ff166101715760405162461bcd60e51b815260206004820152601560248201527f526573756c74206e6f742066696c6c656420796574000000000000000000000060448201526064015b60405180910390fd5b5060009081526004602052604090205490565b6001546001600160a01b031633146101de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610168565b6101e860006105be565b565b6001546001600160a01b031633146102445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610168565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156102c557600080fd5b505af11580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd91906107df565b5050565b6003546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561038057600080fd5b505afa158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190610838565b10156104065760405162461bcd60e51b815260206004820152600f60248201527f4e6f7420656e6f756768204c494e4b00000000000000000000000000000000006044820152606401610168565b610414600254600354610628565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104915760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610168565b6102fd828260009182526004602090815260408084209290925560059052902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6001546001600160a01b031633146105365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610168565b6001600160a01b0381166105b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610168565b6105bb816105be565b50565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610698929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016106c593929190610850565b602060405180830381600087803b1580156106df57600080fd5b505af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906107df565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120868452929091526107719060016108d9565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b6000602082840312156107c2578081fd5b81356001600160a01b03811681146107d8578182fd5b9392505050565b6000602082840312156107f0578081fd5b815180151581146107d8578182fd5b600060208284031215610810578081fd5b5035919050565b60008060408385031215610829578081fd5b50508035926020909101359150565b600060208284031215610849578081fd5b5051919050565b6001600160a01b0384168152600060208481840152606060408401528351806060850152825b8181101561089257858101830151858201608001528201610876565b818111156108a35783608083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160800195945050505050565b60008219821115610911577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50019056fea26469706673582212208203461615136269cddcff41e085c1cb28af55f0e0e310dc71adf0a92b66ceac64736f6c63430008040033";
class RandomNumberProvider__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_vrfCoordinator, _linkToken, keyHash, fee, overrides) {
        return super.deploy(_vrfCoordinator, _linkToken, keyHash, fee, overrides || {});
    }
    getDeployTransaction(_vrfCoordinator, _linkToken, keyHash, fee, overrides) {
        return super.getDeployTransaction(_vrfCoordinator, _linkToken, keyHash, fee, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.RandomNumberProvider__factory = RandomNumberProvider__factory;
RandomNumberProvider__factory.bytecode = _bytecode;
RandomNumberProvider__factory.abi = _abi;
